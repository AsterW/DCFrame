language: swift
osx_image: xcode11.6
gemfile: Gemfile
addons:
  homebrew:
    packages:
    - swiftlint
    update: true

branches:
  only:
    - master

cache:
  - cocoapods
  - bundler
  - $HOME/Library/Caches/Homebrew

env:
   global:
   - LANG=en_US.UTF-8

   - IOS_SCHEME="DCFrame"
   - EXAMPLE_SCHEME="DCFrame_Example"

   - IOS_SDK=iphonesimulator
   - IOS_EXAMPLE_WORKSPACE="Example/DCFrame.xcworkspace
   - IOS_DESTINATION="OS=13.2,name=iPhone XÊ€"

before_install:
  - rvm install ruby-2.7.0
  - rvm use 2.7.0
  - rvm gemset create DCFrame
  - rvm use 2.7.0@DCFrame
  - gem update --system
  - gem install bundler
  - bundle install

jobs:
  include:
    - stage: pod lint
      name: Cocoapods Lint
      script: 
        - bundle exec pod lib lint DCFrame.podspec --allow-warnings

    # Build example projects
    - &build-examples
      stage: build examples
      name: "iOS 13.2"
      env: DESTINATION="$IOS_DESTINATION" WORKSPACE="$IOS_EXAMPLE_WORKSPACE" SDK="$IOS_SDK" SCHEME="$IOS_SCHEME"
      script:
        - set -o pipefail
        - xcodebuild -version -sdk
        - xcodebuild build -workspace "$WORKSPACE" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO;

    # UI Tests
    - stage: tests
      name: "UI Tests: iOS 13.2"
      env: DESTINATION="$IOS_DESTINATION" WORKSPACE="$IOS_EXAMPLE_WORKSPACE" SDK="$IOS_SDK" SCHEME="$EXAMPLE_SCHEME"
      script:
        - set -o pipefail
        - xcodebuild build test -workspace "$WORKSPACE" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO;

    # Unit Tests
    - &unit-tests
      stage: tests
      name: "Tests: iOS 13.2"
      env: DESTINATION="$IOS_DESTINATION" WORKSPACE="$IOS_EXAMPLE_WORKSPACE"  SDK="$IOS_SDK" SCHEME="$IOS_SCHEME"
      script:
        - set -o pipefail
        - xcodebuild build build-for-testing -workspace "$WORKSPACE" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES ONLY_ACTIVE_ARCH=YES;
        - xcodebuild analyze test-without-building -workspace "$WORKSPACE" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES ONLY_ACTIVE_ARCH=YES;

stages:
  - pod lint
  - build examples
  - tests
